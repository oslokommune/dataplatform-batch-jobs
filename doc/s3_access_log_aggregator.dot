digraph G {
  node [ fontname = "Cantarell" ];
  edge [ fontname = "Cantarell"; fontsize = 11 ];

  S3LogsToCSV [
    label = "S3LogsToCSV";
    style = bold;
    shape = rect;
  ];
  S3LogsToCSV_in [
    label = "Raw S3 logs";
    shape = note;
  ];
  S3LogsToCSV_out [
    label = "S3Target(data.csv)";
    shape = note;
  ];

  EnrichCSVToParquet [
    label = "EnrichCSVToParquet";
    style = bold;
    shape = rect;
  ];
  EnrichCSVToParquet_out [
    label = "S3Target(data.parquet)";
    shape = note;
  ];

  AggregateToDB [
    label = "AggregateToDB";
    style = bold;
    shape = rect;
  ];
  AggregateToDB_out_1 [
    label = "S3Target(data-agg.parquet)";
    shape = note;
  ];
  AggregateToDB_out_2 [
    label = "DB";
    shape = cylinder;
  ];

  Run [
    label = "Run";
    style = bold;
    shape = rect;
  ];

  S3LogsToCSV_in -> S3LogsToCSV [ style=dotted ];
  S3LogsToCSV -> S3LogsToCSV_out [ label = "output()" ];

  S3LogsToCSV -> EnrichCSVToParquet [ label = "requires()" ];
  S3LogsToCSV_out -> EnrichCSVToParquet [ label = "input()" ];
  EnrichCSVToParquet -> EnrichCSVToParquet_out [ label = "output()" ];

  EnrichCSVToParquet -> AggregateToDB [ label = "requires() × 24" ];
  EnrichCSVToParquet_out -> AggregateToDB [ label = "input()" ];
  AggregateToDB -> AggregateToDB_out_1 [ label = "output()" ];
  AggregateToDB -> AggregateToDB_out_2 [ style=dotted ];

  AggregateToDB -> Run [ label = "requires() × <days>"];

  {
    rank=min;
    AggregateToDB_out_2;
  }
  {
    rank=same;
    S3LogsToCSV; EnrichCSVToParquet; AggregateToDB; Run;
  }
  {
    rank=same;
    S3LogsToCSV_in; S3LogsToCSV_out; EnrichCSVToParquet_out; AggregateToDB_out_1;
  }
}
